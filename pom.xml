<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.metastringfoundation</groupId>
    <artifactId>jaxrs-starter</artifactId>
    <!-- use semantic versioning https://semver.org/ -->
    <version>0.0.1-SNAPSHOT</version>
    <name>JAX-RS Starter</name>
    <description>A boilerplate java project</description>
    <packaging>${packaging.type}</packaging>

    <!-- ideal to put all configuration at the top together -->
    <!-- Can use a property later like ${property.name} -->
    <properties>
        <packaging.type>jar</packaging.type>
        <!-- Decide the java version that the maven-compiler-plugin will use  -->
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Wherever possible, use latest stable version of dependencies -->
        <jersey.version>2.31</jersey.version>
        <junit.version>5.6.2</junit.version>
    </properties>

    <!-- build plugins need to be configured for easy building -->
    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.1</version>
            </plugin>
        </plugins>
    </build>

    <!-- dependency management allows upstream to provide a comprehensive version of all dependencies -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.glassfish.jersey</groupId>
                <artifactId>jersey-bom</artifactId>
                <version>${jersey.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- the JAX-RS API -->
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <version>2.1.6</version>
        </dependency>

        <!-- Jersey runs as a servlet inside a multitude of supported containers -->
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
        </dependency>

        <!-- jersey requires a DI framework to run -->
        <!-- it internally needs hk2 -->
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <scope>compile</scope>
        </dependency>
        <!-- but we're going to need proper CDI -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>2.0.SP1</version>
        </dependency>
        <!-- The actual dependencies that provide CDI
             is added in profiles to allow separation of dependencies for SE and tomcat -->

        <!-- We are not going to try to run this on ancient servlet containers -->
        <!-- By specifying this dependency, we also tell maven-war-plugin to ignore missing web.xml -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- Configuration should follow https://12factor.net/config -->
        <!-- MicroProfile Config makes this possible -->
        <dependency>
            <groupId>io.smallrye.config</groupId>
            <artifactId>smallrye-config</artifactId>
            <version>1.8.5</version>
        </dependency>

        <!-- let us provide an embedded server for cloud deployments -->
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-grizzly2-http</artifactId>
        </dependency>

        <!-- hibernate for JPA. Let us use hikari connection pool -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-hikaricp</artifactId>
            <version>5.4.20.Final</version>
        </dependency>
        <!-- postgres JDBC -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.2.14</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-binding</artifactId>
        </dependency>
    </dependencies>

    <!-- Some dependencies cannot be specified together -->
    <!-- So we create two profiles -->
    <profiles>
        <!-- The default profile will contain dependencies for Java SE -->
        <profile>
            <id>default</id>
            <activation>
                <!-- since this is required for SE, let it be run by default -->
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <packaging.type>jar</packaging.type>
            </properties>
            <dependencies>
                <!-- for CDI in SE -->
                <dependency>
                    <groupId>org.glassfish.jersey.ext.cdi</groupId>
                    <artifactId>jersey-weld2-se</artifactId>
                </dependency>
                <!-- we're going to use an old version of weld because that's what the jersey extension above supports -->
                <dependency>
                    <groupId>org.jboss.weld.se</groupId>
                    <artifactId>weld-se-core</artifactId>
                    <version>3.1.4.Final</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.6.0</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <mainClass>org.metastringfoundation.starters.jaxrs.Main</mainClass>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>tomcat</id>
            <properties>
                <packaging.type>war</packaging.type>
            </properties>
            <dependencies>
                <!-- this is probably buggy because we're using cdi1x extension but weld 3.x -->
                <dependency>
                    <groupId>org.glassfish.jersey.ext.cdi</groupId>
                    <artifactId>jersey-cdi1x-servlet</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.jboss.weld.servlet</groupId>
                    <artifactId>weld-servlet-core</artifactId>
                    <version>3.1.4.Final</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.8.1</version>
                        <configuration>
                            <excludes>
                                <!-- have to exclude the classes that refer to weld from the other profile -->
                                <exclude>org/metastringfoundation/starters/jaxrs/Main.java</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>